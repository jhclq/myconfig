;; emacs软件包配置
;; 添加软件包仓库
(require 'package)
(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
(package-initialize)

;; undo-tree配置
;; C-x u进入undo-tree-v-mode
;; p,n上下移动 b,f左右切换 t显示时间戳 选定后q退出
(require 'undo-tree)
(global-undo-tree-mode)

;; company配置
;; 自动开启company-mode
(require 'company)
(add-hook 'after-init-hook 'global-company-mode)

;; evil插件，vim模式
;;(require 'evil)
;;(evil-mode 1)

;; org-mode配置
(require 'org)
(add-to-list 'auto-mode-alist '("\\.org$" . org-mode))
(define-key global-map "\C-cl" 'org-store-link)
(define-key global-map "\C-ca" 'org-agenda)
(setq org-log-done t)
;; 代码块语法高亮, 通过html导出高亮代码(需要安装htmlize.el)
(setq org-src-fontify-natively t)
;; 设置能被org-babel加载的语言
(org-babel-do-load-languages
 'org-babel-load-languages
 '((C . t)
   (emacs-lisp . t)
   (sh . t)
   (java . t)
   (python .t)))
;; 设置org-mode使用xelatex
(setq org-latex-pdf-process '("xelatex -interaction nonstopmode %f"
			      "xelatex -interaction nonstopmode %f"))

;; 自动开启auto-fill-mode
(add-hook 'python-mode-hook 'turn-on-auto-fill)
(add-hook 'org-mode-hook 'turn-on-auto-fill)

;; 设置代码风格
(setq c-default-style "linux"
      c-basic-offset 4)

;; 解析shell中的颜色信息
(autoload 'ansi-color-for-comint-mode-on "ansi-color" nil t)
(add-hook 'shell-mode-hook 'ansi-color-for-comint-mode-on t)

;; Ctrl-c ← 还原之前的窗口配置
(when (fboundp 'winner-mode)
  (winner-mode)
  (windmove-default-keybindings))

;; 去除欢迎界面
(setq inhibit-startup-message t)

;; 关闭工具栏，tool-bar-mode 即为一个 Minor Mode
(tool-bar-mode -1)

;; 关闭文件滑动控件
(scroll-bar-mode -1)

;; 显示行号
(global-linum-mode 1)
(put 'set-goal-column 'disabled nil)

;; 取消备份原文件(filename~)
;(setq make-backup-files nil)

;; 自动备份设置
(setq
 backup-by-copying t
 backup-directory-alist
 '(("." . "~/.saves"))
 delete-old-versions t
 kept-new-versions 6
 kept-old-versions 2
 version-control t)

;; auctex配置
(load "auctex.el" nil t t)
(load "preview-latex.el" nil t t)
(setq Tex-auto-save t)
(setq Tex-parse-self t)
(setq-default Tex-master nil)

;;  latex配置
(setq Tex-output-view-style (quote (("^pdf$" "." "evince &o %(outpage)"))))
(add-hook 'LaTex-mode-hook (lambda()
			     (add-to-list 'Tex-command-list '("XeLaTex" "%`xelatex%(mode)'i%t" Tex-run-Tex nil t))
			     (setq Tex-command-default "XeLaTex")))
